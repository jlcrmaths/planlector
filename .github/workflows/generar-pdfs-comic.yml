name: Generar PDFs tipo cómic (con imágenes integradas)

on:
  push:
    paths:
      - 'historias/*.md'
      - 'historias/**/*.md'
      - 'scripts/generar_pdfs_comic.py'
      - '.github/workflows/generar-pdfs-comic.yml'
      - 'requirements.txt'

jobs:
  generar_pdfs:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Instalar fuentes (DejaVu + Noto extra)
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-dejavu-core fonts-noto-core fonts-noto-extra
          fc-list | grep -i -E 'DejaVuSans|Noto' || true

      - name: Detectar archivos .md cambiados (JSON)
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            historias/*.md
            historias/**/*.md
          json: true

      - name: Preparar lista de .md a procesar (soporta espacios)
        id: prep
        uses: actions/github-script@v7
        env:
          CHANGED_JSON: ${{ steps.changed.outputs.all_changed_files_json }}
          CHANGED_COUNT: ${{ steps.changed.outputs.all_changed_files_count }}
        with:
          script: |
            const fs = require('fs');
            const changedCount = Number(process.env.CHANGED_COUNT || '0');
            if (!process.env.CHANGED_JSON || !changedCount) { core.setOutput('mode','all'); return; }
            let files = [];
            try { files = JSON.parse(process.env.CHANGED_JSON || '[]'); } catch {}
            const mds = files.filter(p => p.toLowerCase().endsWith('.md') && p.startsWith('historias/'));
            if (mds.length) { fs.writeFileSync('changed_list.txt', mds.join('\n')); core.setOutput('mode','list'); }
            else { core.setOutput('mode','all'); }

      - name: Generar PDFs (solo cambiados)
        if: steps.prep.outputs.mode == 'list'
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_MODEL_ID: runwayml/stable-diffusion-v1-5
          FAST_MODE: '0'  # 0=imágenes reales (API); 1=placeholders
          FONT_PATH: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
        run: |
          mkdir -p pdfs_generados
          echo "Procesando solo los MD cambiados:"
          cat changed_list.txt
          python scripts/generar_pdfs_comic.py --output-folder pdfs_generados --list-file changed_list.txt

      - name: Generar PDFs (todo historias/)
        if: steps.prep.outputs.mode != 'list'
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_MODEL_ID: runwayml/stable-diffusion-v1-5
          FAST_MODE: '0'
          FONT_PATH: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
        run: |
          mkdir -p pdfs_generados
          echo "Sin lista de cambios; procesando todo 'historias/'"
          python scripts/generar_pdfs_comic.py --input-folder historias --output-folder pdfs_generados

      - name: Listar PDFs generados
        id: listpdfs
        run: |
          echo "Contenido de pdfs_generados/:"
          ls -la pdfs_generados || true
          echo "Listado recursivo de PDFs:"
          find pdfs_generados -type f -name '*.pdf' -print || true
          COUNT=$(find pdfs_generados -type f -name '*.pdf' 2>/dev/null | wc -l || true)
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Subir PDFs como artefacto
        if: steps.listpdfs.outputs.count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: pdfs-comic
          path: |
            pdfs_generados/*.pdf
            pdfs_generados/**/*.pdf
          if-no-files-found: error


