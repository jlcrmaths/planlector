name: Generar PDFs tipo c칩mic (con im치genes integradas)

on:
  push:
    paths:
      - 'historias/*.md'
      - 'historias/**/*.md'
      - 'scripts/generar_pdfs_comic.py'
      - '.github/workflows/generar-pdfs-comic.yml'
      - 'requirements.txt'

jobs:
  generar_pdfs:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Instalar fuente DejaVu Sans (Unicode)
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-dejavu-core
          ls -l /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf || true

      - name: Detectar archivos .md cambiados (JSON seguro para espacios)
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            historias/*.md
            historias/**/*.md
          json: "true"

      - name: Preparar lista de archivos a procesar
        id: prep
        run: |
          # Si no hay JSON de cambios o est치 vac칤o, dejamos que el script procese toda la carpeta
          if [ -z '${{ steps.changed.outputs.all_changed_files_json }}' ] || [ '${{ steps.changed.outputs.all_changed_files_count }}' = '0' ]; then
            echo "mode=all" >> $GITHUB_OUTPUT
          else
            echo '${{ steps.changed.outputs.all_changed_files_json }}' > changed.json
            # Extraemos solo .md bajo 'historias/' a un txt (una ruta por l칤nea), manteniendo espacios
            python - << 'PY'
import json, sys
data = json.load(open('changed.json'))
mds = [p for p in data if p.lower().endswith('.md') and p.startswith('historias/')]
open('changed_list.txt','w',encoding='utf-8').write("\n".join(mds))
print(f"MD cambiados: {len(mds)}", file=sys.stderr)
PY
            if [ -s changed_list.txt ]; then
              echo "mode=list" >> $GITHUB_OUTPUT
            else
              echo "mode=all" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Generar PDFs con im치genes integradas
        env:
          # 游녤 Usa tu secret existente
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          # 0 = im치genes reales por API; 1 = placeholders r치pidos (sin llamadas a API)
          FAST_MODE: '0'
          FONT_PATH: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
        run: |
          mkdir -p pdfs_generados
          if [ '${{ steps.prep.outputs.mode }}' = 'list' ]; then
            echo "Procesando solo los MD cambiados:"
            cat changed_list.txt
            python scripts/generar_pdfs_comic.py --output-folder pdfs_generados --list-file changed_list.txt
          else
            echo "Sin lista de cambios; procesando todo 'historias/'"
            python scripts/generar_pdfs_comic.py --input-folder historias --output-folder pdfs_generados
          fi

      - name: Listar PDFs generados
        id: listpdfs
        run: |
          echo "Contenido de pdfs_generados/:"
          ls -la pdfs_generados || true
          echo "Listado recursivo de PDFs:"
          find pdfs_generados -type f -name '*.pdf' -print || true
          COUNT=$(find pdfs_generados -type f -name '*.pdf' 2>/dev/null | wc -l || true)
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Subir PDFs como artefacto
        if: steps.listpdfs.outputs.count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: pdfs-comic
          path: |
            pdfs_generados/*.pdf
            pdfs_generados/**/*.pdf



